{"version":3,"sources":["components/Carousel/Carousel.tsx","components/SettingsMenu/SettingsMenu.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","position","setPosition","preparedImages","containerWidth","translate","useEffect","prevPosition","maxPosition","length","Math","min","className","style","width","transform","transition","map","image","index","src","alt","type","onClick","max","SettingsMenu","setStep","setFrameSize","setItemWidth","setAnimationDuration","setInfinite","action","htmlFor","name","value","onChange","event","target","checked","App","state","setImages","newImages","setState","newStep","newFrameSize","newItemWidth","newAnimationDuration","newInfinite","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa6cfa9f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const { 0: position, 1: setPosition } = useState(0);\n\n  const preparedImages = images;\n  const containerWidth = frameSize * itemWidth;\n  const translate = itemWidth * step;\n\n  useEffect(() => {\n    setPosition(prevPosition => {\n      const maxPosition = -((images.length - frameSize) * itemWidth);\n      const minPosition = 0;\n\n      if (infinite && prevPosition === minPosition) {\n        return maxPosition;\n      }\n\n      return Math.min(minPosition, prevPosition + translate);\n    });\n  }, [itemWidth]);\n\n  const handleNextButton = () => {\n    setPosition(prevPosition => {\n      const maxPosition = -((images.length - frameSize) * itemWidth);\n      const minPosition = 0;\n\n      if (infinite && prevPosition === maxPosition) {\n        return minPosition;\n      }\n\n      return Math.max(maxPosition, prevPosition - translate);\n    });\n  };\n\n  const handlePrevButton = () => {\n    setPosition(prevPosition => {\n      const maxPosition = -((images.length - frameSize) * itemWidth);\n      const minPosition = 0;\n\n      if (infinite && prevPosition === minPosition) {\n        return maxPosition;\n      }\n\n      return Math.min(minPosition, prevPosition + translate);\n    });\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{ width: containerWidth }}\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transform: `translateX(${position}px)`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        {preparedImages.map((image, index) => (\n          <li key={image}>\n            <img\n              src={image}\n              alt={`${index + 1}`}\n              style={{ width: itemWidth }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handlePrevButton}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handleNextButton}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\n\nimport './SettingsMenu.scss';\n\ninterface Props {\n  setStep: (n: number) => void,\n  setFrameSize: (n: number) => void,\n  setItemWidth: (n: number) => void,\n  setAnimationDuration: (n: number) => void,\n  setInfinite: (i: boolean) => void,\n\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\ntype EventInput = React.ChangeEvent<HTMLInputElement>;\n\nconst SettingsMenu: React.FC<Props> = ({\n  setStep,\n  setFrameSize,\n  setItemWidth,\n  setAnimationDuration,\n  setInfinite,\n\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => (\n  <form action=\"#\" className=\"SettingsMenu\">\n    <div className=\"SettingsMenu__param\">\n      <label className=\"SettingsMenu__label\" htmlFor=\"step\">Step:</label>\n      <input\n        type=\"number\"\n        name=\"step\"\n        className=\"SettingsMenu__input\"\n        value={step}\n        onChange={(event: EventInput) => setStep(+event.target.value)}\n      />\n    </div>\n\n    <div className=\"SettingsMenu__param\">\n      <label className=\"SettingsMenu__label\" htmlFor=\"frameSize\">\n        Frame size:\n      </label>\n      <input\n        type=\"number\"\n        name=\"frameSize\"\n        className=\"SettingsMenu__input\"\n        value={frameSize}\n        onChange={(event: EventInput) => setFrameSize(+event.target.value)}\n      />\n    </div>\n\n    <div className=\"SettingsMenu__param\">\n      <label className=\"SettingsMenu__label\" htmlFor=\"itemWidth\">\n        Item width:\n      </label>\n      <input\n        type=\"number\"\n        name=\"itemWidth\"\n        className=\"SettingsMenu__input\"\n        value={itemWidth}\n        onChange={(event: EventInput) => setItemWidth(+event.target.value)}\n      />\n\n    </div>\n    <div className=\"SettingsMenu__param\">\n      <label className=\"SettingsMenu__label\" htmlFor=\"animationDuration\">\n        Animation duration:\n      </label>\n      <input\n        type=\"number\"\n        name=\"animationDuration\"\n        className=\"SettingsMenu__input\"\n        value={animationDuration}\n        onChange={(event) => (setAnimationDuration(+event.target.value))}\n      />\n    </div>\n\n    <div className=\"SettingsMenu__param\">\n      <label className=\"SettingsMenu__label\" htmlFor=\"infinite\">\n        Infinity:\n      </label>\n      <input\n        type=\"checkbox\"\n        name=\"infinite\"\n        className=\"SettingsMenu__input\"\n        checked={infinite}\n        onChange={(event: EventInput) => setInfinite(event.target.checked)}\n      />\n    </div>\n\n  </form>\n);\n\n/*\nimages,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n*/\n\nexport default SettingsMenu;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel/Carousel';\nimport SettingsMenu from './components/SettingsMenu/SettingsMenu';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  setImages = (newImages: string[]) => {\n    this.setState({ images: newImages });\n  };\n\n  setStep = (newStep: number) => {\n    this.setState({ step: newStep });\n  };\n\n  setFrameSize = (newFrameSize: number) => {\n    this.setState({ frameSize: newFrameSize });\n  };\n\n  setItemWidth = (newItemWidth: number) => {\n    this.setState({ itemWidth: newItemWidth });\n  };\n\n  setAnimationDuration = (newAnimationDuration: number) => {\n    this.setState({ animationDuration: newAnimationDuration });\n  };\n\n  setInfinite = (newInfinite: boolean) => {\n    this.setState({ infinite: newInfinite });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const {\n      setStep,\n      setFrameSize,\n      setItemWidth,\n      setAnimationDuration,\n      setInfinite,\n    } = this;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n\n        <div className=\"App__content\">\n          <SettingsMenu\n            setStep={setStep}\n            setFrameSize={setFrameSize}\n            setItemWidth={setItemWidth}\n            setAnimationDuration={setAnimationDuration}\n            setInfinite={setInfinite}\n            step={step}\n            frameSize={frameSize}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n            infinite={infinite}\n          />\n\n          <Carousel\n            images={images}\n            step={step}\n            frameSize={frameSize}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n            infinite={infinite}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}